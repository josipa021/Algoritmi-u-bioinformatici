# -*- coding: utf-8 -*-
"""ba3l.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CwUkVE0RwlKm7uJP6FRiGumYFX7Ij7MX

**Gapped Genome Path String Problem**

Reconstruct a string from a sequence of (k,d)-mers corresponding to a path in a paired de Bruijn graph.

Given: A sequence of (k, d)-mers (a1|b1), ... , (an|bn) such that Suffix(ai|bi) = Prefix(ai+1|bi+1) for all i from 1 to n-1.

Return: A string Text where the i-th k-mer in Text is equal to Suffix(ai|bi) for all i from 1 to n, if such a string exists.
"""

def GappedGenomePath(k,d, pairs):

    # zalipi prve u parovima, poklapaju se na k-1 mista 
    # pa dodamo samo jedno slovo na prethodno
    text = pairs[0][0]
    for i in range (1,len(pairs)):
        text += pairs[i][0][-1]
    # zadnji dio teksta nije pokriven s ovim prije
    # pa dodamo drugi element zadnjeg para i d slova prije
    for i in range(len(pairs) - d - 1, len(pairs) - 1):
        text += pairs[i][1][0]
    text += pairs[-1][1]

    return text

f=open('rosalind_ba3l.txt')
lines=f.readlines()

k = int(lines[0].strip('\n').split(' ')[0])
d = int(lines[0].strip('\n').split(' ')[1])

for i in range (1,len(lines)):
    lines[i] = lines[i].strip("\n").split('|')

print(GappedGenomePath(k,d,lines[1:]))
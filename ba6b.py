# -*- coding: utf-8 -*-
"""ba6b.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RJGM3F7lfRYXao1rpYC1tNxqB-MODxuq

**Number of Breakpoints Problem**

Find the number of breakpoints in a permutation.

Given: A signed permutation P.

Return: The number of breakpoints in P
"""

def changeToNumber(signedNmbr):

    if signedNmbr[0] == '+':
        number = int(signedNmbr[1:])
    else:
        number = -int(signedNmbr[1:])

    return number

def Breakpoints(P):

    # breakpoint can also be at the beginning or the end
    P = ['+0'] + P + ['+'+str(len(P)+1)]
    counter = 0

    for i in range(0,len(P) - 1):

         if (changeToNumber(P[i+1]) - changeToNumber(P[i]) != 1):

            counter += 1

    return counter

f=open('rosalind_ba6b.txt')
line=f.readline()

P = line[1:(len(line)-2)] #excluding ")" and "\n"
P = P.split(' ')

print(Breakpoints(P))
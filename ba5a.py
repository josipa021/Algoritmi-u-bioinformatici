# -*- coding: utf-8 -*-
"""ba5a.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_10vDXDqVVK2UoWazBYeXQZWQaFf3jRd

**Find the minimum number of coins needed to make change.**

Given: An integer money and an array Coins of positive integers.

Return: The minimum number of coins with denominations Coins that changes money.
"""

def DPChange(money,coins):
    minNumCoins=[]
    minNumCoins.append(0)
    for m in range (0,money+1):
        minNumCoins.append(money+10) #Infinity
        for i in range (0,len(coins)):
            if m>=coins[i]:
                if minNumCoins[m-coins[i]]+1<minNumCoins[m]:
                    minNumCoins[m]=minNumCoins[m-coins[i]]+1
    return minNumCoins[money]

f=open('rosalind_ba5a.txt')
lines=f.readlines()

money=int(lines[0].strip('\n'))
coins_string=lines[1].strip('\n').split(',')
coins=[]

for coin in coins_string:
  coins.append(int(coin))

print(DPChange(money,coins))
# -*- coding: utf-8 -*-
"""ba1n.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17UX-MWCBLzq0KQkLqJY_gnSCa_iN4bxr
"""

def HammingDistance(p,q):
  if(len(p)!=len(q)):
    return -1 
  dist=0
  for i in range(0,len(p)):
    if(p[i]!=q[i]):
      dist=dist+1
  return dist

def Neighbours(pattern,d): 
  if(d==0):
    return pattern
  if(len(pattern)==1):
    return 'A','T','C','G'
  neighbourhood=set()
  suffixNeighbours=Neighbours(pattern[1:],d)
  for text in suffixNeighbours:
    if(HammingDistance(pattern[1:],text)<d):
      neighbourhood.add('A'+pattern[1:])
      neighbourhood.add('T'+pattern[1:])
      neighbourhood.add('C'+pattern[1:])
      neighbourhood.add('G'+pattern[1:])
    else:
      neighbourhood.add(pattern[0]+text)
  return neighbourhood

pattern="TATGCTGCG"

print(Neighbours(pattern,2))